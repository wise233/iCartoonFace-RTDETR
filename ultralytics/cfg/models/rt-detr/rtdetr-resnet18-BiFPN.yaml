# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 1  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, 1, 'relu']] # 0-P1
  - [-1, 1, ConvNormLayer, [32, 3, 1, 1, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, 1, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2

  - [-1, 2, Blocks, [64,  BasicBlock, 2, False]] # 4
  - [-1, 2, Blocks, [128, BasicBlock, 3, False]] # 5-P3
  - [-1, 2, Blocks, [256, BasicBlock, 4, False]] # 6-P4
  - [-1, 2, Blocks, [512, BasicBlock, 5, False]] # 7-P5

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 8 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]  # 9

  - [5, 1, Conv, [256]]  # 10-P3/8
  - [6, 1, Conv, [256]]  # 11-P4/16
  - [9, 1, Conv, [256]]  # 12-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13 P5->P4
  - [[-1, 11], 1, Bi_FPN, []] # 14
  - [-1, 3, RepC3, [256, 0.5]] # 15-P4/16

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 16 P4->P3
  - [[-1, 10], 1, Bi_FPN, []] # 17
  - [-1, 3, RepC3, [256, 0.5]] # 18-P3/8

  - [4, 1, Conv, [256, 3, 2]] # 19 P2->P3
  - [[-1, 10, 18], 1, Bi_FPN, []] # 20
  - [-1, 3, RepC3, [256, 0.5]] # 21-P3/8

  - [-1, 1, Conv, [256, 3, 2]] # 22 P3->P4
  - [[-1, 11, 15], 1, Bi_FPN, []] # 23
  - [-1, 3, RepC3, [256, 0.5]] # 24-P4/16

  - [-1, 1, Conv, [256, 3, 2]] # 25 P4->P5
  - [[-1, 12], 1, Bi_FPN, []] # 26
  - [-1, 3, RepC3, [256, 0.5]] # 27-P5/32

  - [[21, 24, 27], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)
