# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]

  #- [-1, 1, ConvNormLayer, [32, 3, 2, 1, 'relu']] # 0-P1
  #- [-1, 1, ConvNormLayer, [32, 3, 1, 1, 'relu']] # 1
  #- [-1, 1, ConvNormLayer, [64, 3, 1, 1, 'relu']] # 2
  #- [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2

  #- [-1, 2, Blocks, [64,  BasicBlock, 2, False]] # 4
  #- [-1, 2, Blocks, [128, BasicBlock, 3, False]] # 5-P3
  #- [-1, 2, Blocks, [256, BasicBlock, 4, False]] # 6-P4
  #- [-1, 2, Blocks, [512, BasicBlock, 5, False]] # 7-P5
  - [-1, 1, MobileNetV4ConvSmall, []]  # 4

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 8 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]
  - [-1, 1, CA, []] # 10
  - [-1, 1, nn.Conv2d, [256, 1]] # 11
  - [-1, 3, RepC3, [256, 0.5]] # 12 P5

  - [6, 1, CA, []]
  - [-1, 1, nn.Conv2d, [256, 1]]  # 14

  - [11, 1, nn.ConvTranspose2d, [256, 3, 2, 1, 1]] # 15
  - [-1, 1, CA, [4, False]]
  - [[-1, 14], 1, multiply, []] # 17
  - [[-1, 15], 1, Add, []] # 18
  - [-1, 3, RepC3, [256, 0.5]] # 19 P4

  - [5, 1, CA, []] # 20
  - [-1, 1, nn.Conv2d, [256, 1]] # 21

  - [15, 1, nn.ConvTranspose2d, [256, 3, 2, 1, 1]] # 22
  - [-1, 1, CA, [4, False]] # 23
  - [[-1, 21], 1, multiply, []] # 24
  - [[-1, 22], 1, Add, []] # 25
  - [-1, 3, RepC3, [256, 0.5]] # 26 P3

  - [[26, 19, 12], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)
