# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, HGStem, [32, 48]]  # 0-P2/4
  - [-1, 6, HGBlock, [48, 128, 3]]  # stage 1

  - [-1, 1, DWConv, [128, 3, 2, 1, False]]  # 2-P3/8
  - [-1, 6, HGBlock, [96, 512, 3]]  # stage 2

  - [-1, 1, DWConv, [512, 3, 2, 1, False]]  # 4-P3/16
  - [-1, 6, HGBlock, [192, 1024, 5, True, False]]  # cm, c2, k, light, shortcut
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]  # stage 3

  - [-1, 1, DWConv, [1024, 3, 2, 1, False]]  # 8-P4/32
  - [-1, 6, HGBlock, [384, 2048, 5, True, False]]  # stage 4

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 10 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]

  - [ 3, 1, Conv, [ 256 ] ]  # 12-P3/8
  - [ 7, 1, Conv, [ 256 ] ]  # 13-P4/16
  - [ 11, 1, Conv, [ 256 ] ]  # 14-P5/32

  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ] # 15 P5->P4
  - [ [ -1, 13], 1, Bi_FPN, [ ] ] # 16
  - [ -1, 3, RepC3, [ 256] ] # 17-P4/16

  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ] # 18 P4->P3
  - [ [ -1, 12], 1, Bi_FPN, [ ] ] # 19
  - [ -1, 3, RepC3, [ 256] ] # 20-P3/8

  - [ 1, 1, Conv, [ 256, 3, 2 ] ] # 21 P2->P3
  - [ [ -1, 12, 20], 1, Bi_FPN, [ ] ] # 22
  - [ -1, 3, RepC3, [ 256] ] # 23-P3/8

  - [ -1, 1, Conv, [ 256, 3, 2 ] ] # 24 P3->P4
  - [ [ -1, 13, 17], 1, Bi_FPN, [ ] ] # 25
  - [ -1, 3, RepC3, [ 256] ] # 26-P4/16

  - [ -1, 1, Conv, [ 256, 3, 2 ] ] # 27 P4->P5
  - [ [ -1, 14], 1, Bi_FPN, [ ] ] # 28
  - [ -1, 3, RepC3, [ 256] ] # 29-P5/32

  - [ [ 23, 26, 29], 1, RTDETRDecoder, [ nc] ]  # Detect(P3, P4, P5)
